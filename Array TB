#include <stdio.h>

#define INITIAL_BALANCE 1000
#define MAX_TRANSACTIONS 10

void process_transactions(const int transactions[], int length);

int main() {
    int transactions[] = {200, -150, -500, -400, -50, -200, 300};
    int length = sizeof(transactions) / sizeof(transactions[0]);

    process_transactions(transactions, length);

    return 0;
}

void process_transactions(const int transactions[], int length) {
    int balance = INITIAL_BALANCE;
    int tobeprocessed[MAX_TRANSACTIONS];
    int tobeprocessed_count = 0;

    for (int i = 0; i < length; i++) {
        int transaction = transactions[i];
        
        // Check if the transaction is a withdrawal and exceeds balance
        if (transaction < 0 && -transaction > balance) {
            printf("Invalid transaction: %d exceeds balance %d. Skipping.\n", transaction, balance);
            tobeprocessed[tobeprocessed_count++] = transaction;
            continue;
        }
        
        // Update balance with valid transaction
        balance += transaction;
        printf("Processed transaction: %d, New balance: %d\n", transaction, balance);

        // Check if balance reaches zero and stop further processing
        if (balance == 0) {
            printf("Balance reached zero. No further transactions will be processed.\n");
            for (int j = i + 1; j < length; j++) {
                tobeprocessed[tobeprocessed_count++] = transactions[j];
            }
            break;
        }
    }

